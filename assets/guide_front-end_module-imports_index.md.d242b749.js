import{o as e,c as s,a as n,b as t,t as a,d as o}from"./app.35471ef9.js";const i='{"title":"Module Imports","description":"","frontmatter":{"title":"Module Imports"},"headers":[{"level":2,"title":"The problem","slug":"the-problem"},{"level":2,"title":"Solving this problem","slug":"solving-this-problem"},{"level":3,"title":"Example Vite configuration","slug":"example-vite-configuration"}],"relativePath":"guide/front-end/module-imports/index.md","lastUpdated":1620175427192}',r={},p={id:"frontmatter-title"},l=n("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),c=o('<p>An ES module import is a <code>import</code> statement that intructs your browser to automatically load a new file in context. This is an amazing feature in modern development as it avoids the need for polyfills and libraries.</p><h2 id="the-problem"><a class="header-anchor" href="#the-problem" aria-hidden="true">#</a> The problem</h2><p>Due to the way Vite generates outputs, <code>import</code> statements will become relative which in the context of AEM won&#39;t work. Lets say that we have a ClientLib located at:</p><p><strong>/etc.clientlibs/&lt;project&gt;/core.footer.js</strong></p><p>Within <code>my-clientlib.js</code> lets assume that a module by the name of <code>modulea.js</code> needs to be imported by is been requested using:</p><p><strong>../../resources/modulea.js</strong></p><p>What you will see in your browser is a 404 request error for <code>modulea.js</code> because the request URI will end up looking something like:</p><p><strong>/etc.clientlibs/&lt;project&gt;/resources/modulea.js</strong></p><h2 id="solving-this-problem"><a class="header-anchor" href="#solving-this-problem" aria-hidden="true">#</a> Solving this problem</h2><p>You might think this is a tough problem to resolve but AEM provides a nice simple solution which only requires us to nest our compiled files into a nested <code>resources</code> folder.</p><p>For some background, AEM 6.4 and newer don&#39;t respond to requests via the <code>/etc.clientlibs</code> proxy unless the requested resource resides within a <code>resources</code> folder.</p><h3 id="example-vite-configuration"><a class="header-anchor" href="#example-vite-configuration" aria-hidden="true">#</a> Example Vite configuration</h3><p>Here is an example of how to configure Vite to ensure all files are placed in the correct places.</p><div class="language-js"><div class="highlight-lines"><br><br><br><br><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><br><br><br><br><br></div><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  build<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rollupOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n      output<span class="token operator">:</span> <span class="token punctuation">{</span>\n        assetFileNames<span class="token operator">:</span> <span class="token string">&#39;core.header/resources/[ext]/[name][extname]&#39;</span><span class="token punctuation">,</span>\n        chunkFileNames<span class="token operator">:</span> <span class="token string">&#39;core.footer/resources/chunks/[name].[hash].js&#39;</span><span class="token punctuation">,</span>\n        entryFileNames<span class="token operator">:</span> <span class="token string">&#39;core.footer/resources/js/[name].js&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',14);r.render=function(o,i,r,u,d,h){return e(),s("div",null,[n("h1",p,[l,t(" "+a(o.$frontmatter.title),1)]),c])};export default r;export{i as __pageData};
