import{_ as a,c as t,a as s,b as n,t as l,d as o,o as p}from"./app.54844076.js";const g=JSON.parse('{"title":"Structure","description":"","frontmatter":{"title":"Structure"},"headers":[{"level":2,"title":"ClientLibs","slug":"clientlibs","link":"#clientlibs","children":[{"level":3,"title":"Working with the AEM Archetype","slug":"working-with-the-aem-archetype","link":"#working-with-the-aem-archetype","children":[]}]},{"level":2,"title":"Template policy(s)","slug":"template-policy-s","link":"#template-policy-s","children":[]}],"relativePath":"guide/front-end/structure/index.md","lastUpdated":1675212307000}'),c={name:"guide/front-end/structure/index.md"},r={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=o(`<p>Considerations about varying project structures have been taken into account as much as possible. Examples can only provide so much detail and as such the below is what is considered a best-case structure for AEM Vite.</p><h2 id="clientlibs" tabindex="-1">ClientLibs <a class="header-anchor" href="#clientlibs" aria-hidden="true">#</a></h2><p>The best-case structure recommended for ClientLibs when using AEM Vite is as below.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/apps/&lt;project&gt;/clientlibs/clientlib-site</span></span>
<span class="line"><span style="color:#A6ACCD;">/apps/&lt;project&gt;/clientlibs/clientlib-site/resources</span></span>
<span class="line"><span style="color:#A6ACCD;">/apps/&lt;project&gt;/clientlibs/clientlib-site/css.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">/apps/&lt;project&gt;/clientlibs/clientlib-site/js.txt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="working-with-the-aem-archetype" tabindex="-1">Working with the AEM Archetype <a class="header-anchor" href="#working-with-the-aem-archetype" aria-hidden="true">#</a></h3><p>When creating a new project using the <a href="https://github.com/adobe/aem-project-archetype" target="_blank" rel="noreferrer">AEM Archetype</a> it will provide a <code>clientlib-site</code> folder already. You should only need to update <code>ui.frontend</code> to align with AEM Vite and not need to make any changes in <code>ui.apps</code>.</p><h2 id="template-policy-s" tabindex="-1">Template policy(s) <a class="header-anchor" href="#template-policy-s" aria-hidden="true">#</a></h2><p>Your template policy(s) will also need to be updated to support this structure. The below is an example of how to achieve this.</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">page</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">jcr</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">primaryType</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nt:unstructured</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">policy</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">jcr</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">primaryType</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nt:unstructured</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">sling</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">resourceType</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wcm/core/components/policy/policy</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">clientlibs</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[]</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">clientlibsJsHead</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[clientlib-site]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">page</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,9);function y(e,h,D,u,F,m){return p(),t("div",null,[s("h1",r,[n(l(e.$frontmatter.title)+" ",1),i]),d])}const C=a(c,[["render",y]]);export{g as __pageData,C as default};
